name: Project IAC
on:
    push:
        branches:
            - main
            - stage
        paths:
            - terraform/**
    pull_request:
        branches:
            - main
        paths:
            - terraform/**
env:
    AWS_ACCCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
    AWS_REGION: eu-west-2
    EKS_CLUSTER: project-eks

jobs:
    terraform:
        name: Apply terraform code changes
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash
                working-directory: ./terraform
        steps:
            - name: Checkout the code
              uses: actions/checkout@v4

            - name: Setup Terraform with version
              uses: hashicorp/setup-terraform@v2

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ env.AWS_REGION }}  
              
            - name: Initalize Terraform
              id: init
              run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

            - name: Terraform Format
              id: fmt
              run: terraform fmt -check
              
            - name: Terraform Validate
              id: validate
              run: terraform validate
              
            - name: Terraform Plan
              id: plan
              run: terraform plan -no-color -input=false -out planfile
              continue-on-error: true
              
            - name: Terraform status
              if: steps.plan.outcome == 'failure'
              run: exit 1
            - name: Terraform apply
              id: applied
              if: github.ref == 'refs/heads/main' && github.event_name == 'push'
              run: terraform apply -auto-approve -input=false -parallelism=1 planfile

            - name: Get Kube Config file
              id: getconfig
              if: steps.applied.outcome == 'success'
              run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }}

            - name: Install Ingress Controller
              if: steps.applied.outcome == 'success' && steps.getconfig.outcome == 'success'
              run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.3/deploy/static/provider/aws/deploy.yaml
              
              

